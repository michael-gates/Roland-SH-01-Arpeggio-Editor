/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SH01ArpeggioEditor;

import static SH01ArpeggioEditor.SH01Util.*;
import java.awt.Component;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.midi.MidiDevice;
import javax.sound.midi.MidiSystem;
import javax.sound.midi.MidiUnavailableException;
import javax.swing.BoxLayout;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;


/**
 *
 * @author michael
 */
public class SH01ArpeggioEditor extends javax.swing.JFrame {
    private static final Logger logger = Logger.getLogger(SH01ArpeggioEditor.class.getName());
    private final MidiDevice.Info[] midiDeviceInfos = MidiSystem.getMidiDeviceInfo();
    private MidiDevice selectedDevice = null;
    
    private SH01Arpeggiator arp = new SH01Arpeggiator();
    

    /**
     * Creates new form SH01ArpeggioEditor
     */
    public SH01ArpeggioEditor() {
        initComponents();
        initMidi();
        initLabels();
        initArpStepSliders();
    }
    
    private void initMidi() {
        for(MidiDevice.Info info : midiDeviceInfos) {
            outputDeviceComboBox.addItem(info.getName());
        }
        
        try {
            selectedDevice = MidiSystem.getMidiDevice(midiDeviceInfos[0]);
            arp.setMidiDevice(selectedDevice);
        } catch (MidiUnavailableException ex) {
            logger.log(Level.SEVERE, null, ex);
        }
    }
    
    private void initLabels() {
        Hashtable octaveRangeLabelTable = new Hashtable();
        for(int i = -3; i <= 3; i++) {
            octaveRangeLabelTable.put(i+64, new JLabel(Integer.toString(i)));
        }
        sliderOctaveRange.setLabelTable(octaveRangeLabelTable);
        
        Hashtable endStepLabelTable = new Hashtable() {
            {
                put(1, new JLabel("1"));
                put(8, new JLabel("8"));
                put(16, new JLabel("16"));
                put(24, new JLabel("24"));
                put(32, new JLabel("32"));
            }
        };
        sliderEndStep.setLabelTable(endStepLabelTable);
        
        Hashtable velocityLabelTable = new Hashtable() {
            {
                put(0, new JLabel("0"));
                put(127, new JLabel("127"));
            }  
        };
        sliderVelocity.setLabelTable(velocityLabelTable);
        
    }
    
    

    private void initArpStepSliders() {
        int patIndex = 1;

        
        for(Component p : arpeggioPatternTabbedPane.getComponents()) {
            JPanel curTab = (JPanel) p;
            for(int stepIndex = 1; stepIndex <= 32; stepIndex++) {
                JSlider slider = new JSlider();
                slider.setOrientation(JSlider.VERTICAL);
                slider.setMaximum(128);
                slider.setValue(1);
             
                JPanel stepPanel = new JPanel();
                stepPanel.setLayout(new BoxLayout(stepPanel, BoxLayout.Y_AXIS));
                stepPanel.add(new JLabel("S" + Integer.toString(stepIndex), JLabel.CENTER));
                stepPanel.add(slider);
                
                
                
                JLabel valueIndicator = new JLabel("1");
                stepPanel.add(valueIndicator);
                

                final int curPatIndex = patIndex;
                final int curStepIndex = stepIndex;
              
                slider.addChangeListener(new ChangeListener() {
                    public void stateChanged(ChangeEvent e) {

                        valueIndicator.setText(Integer.toString(slider.getValue()));
                        arp.setPatternStep(curPatIndex, curStepIndex, slider.getValue());
                    }
                });
                
                curTab.add(stepPanel);
            }
            
            patIndex++;
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        arpeggioCommonPanel = new javax.swing.JPanel();
        sliderGrid = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        sliderDuration = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sliderMotif = new javax.swing.JSlider();
        sliderOctaveRange = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        sliderAccentRate = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        sliderVelocity = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        sliderEndStep = new javax.swing.JSlider();
        jLabel8 = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        arpeggioPatternPanel = new javax.swing.JPanel();
        arpeggioPatternTabbedPane = new javax.swing.JTabbedPane();
        patternPanel1 = new javax.swing.JPanel();
        patternPanel2 = new javax.swing.JPanel();
        patternPanel3 = new javax.swing.JPanel();
        patternPanel4 = new javax.swing.JPanel();
        patternPanel5 = new javax.swing.JPanel();
        patternPanel6 = new javax.swing.JPanel();
        patternPanel7 = new javax.swing.JPanel();
        patternPanel8 = new javax.swing.JPanel();
        patternPanel9 = new javax.swing.JPanel();
        patternPanel10 = new javax.swing.JPanel();
        patternPanel11 = new javax.swing.JPanel();
        patternPanel12 = new javax.swing.JPanel();
        patternPanel13 = new javax.swing.JPanel();
        patternPanel14 = new javax.swing.JPanel();
        patternPanel15 = new javax.swing.JPanel();
        patternPanel16 = new javax.swing.JPanel();
        devicePanel = new javax.swing.JPanel();
        outputDeviceComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SH01 Arpeggio Editor");

        sliderGrid.setMajorTickSpacing(1);
        sliderGrid.setMaximum(8);
        sliderGrid.setPaintLabels(true);
        sliderGrid.setPaintTicks(true);
        sliderGrid.setSnapToTicks(true);
        sliderGrid.setToolTipText("");
        sliderGrid.setValue(0);
        sliderGrid.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sliderGrid.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderGridStateChanged(evt);
            }
        });

        jLabel2.setText("Grid");

        sliderDuration.setMajorTickSpacing(1);
        sliderDuration.setMaximum(9);
        sliderDuration.setPaintLabels(true);
        sliderDuration.setPaintTicks(true);
        sliderDuration.setSnapToTicks(true);
        sliderDuration.setToolTipText("");
        sliderDuration.setValue(0);
        sliderDuration.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sliderDuration.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderDurationStateChanged(evt);
            }
        });

        jLabel3.setText("Duration");

        jLabel4.setText("Motif");

        sliderMotif.setMajorTickSpacing(1);
        sliderMotif.setMaximum(11);
        sliderMotif.setPaintLabels(true);
        sliderMotif.setPaintTicks(true);
        sliderMotif.setSnapToTicks(true);
        sliderMotif.setToolTipText("");
        sliderMotif.setValue(0);
        sliderMotif.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sliderMotif.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderMotifStateChanged(evt);
            }
        });

        sliderOctaveRange.setMajorTickSpacing(1);
        sliderOctaveRange.setMaximum(67);
        sliderOctaveRange.setMinimum(61);
        sliderOctaveRange.setPaintLabels(true);
        sliderOctaveRange.setPaintTicks(true);
        sliderOctaveRange.setSnapToTicks(true);
        sliderOctaveRange.setToolTipText("");
        sliderOctaveRange.setValue(64);
        sliderOctaveRange.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sliderOctaveRange.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderOctaveRangeStateChanged(evt);
            }
        });

        jLabel5.setText("Octave Range");

        sliderAccentRate.setMajorTickSpacing(10);
        sliderAccentRate.setPaintLabels(true);
        sliderAccentRate.setPaintTicks(true);
        sliderAccentRate.setToolTipText("");
        sliderAccentRate.setValue(0);
        sliderAccentRate.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sliderAccentRate.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderAccentRateStateChanged(evt);
            }
        });

        jLabel6.setText("Accent Rate");

        sliderVelocity.setMajorTickSpacing(1);
        sliderVelocity.setMaximum(127);
        sliderVelocity.setPaintLabels(true);
        sliderVelocity.setPaintTicks(true);
        sliderVelocity.setSnapToTicks(true);
        sliderVelocity.setToolTipText("");
        sliderVelocity.setValue(0);
        sliderVelocity.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sliderVelocity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderVelocityStateChanged(evt);
            }
        });

        jLabel7.setText("Velocity");

        sliderEndStep.setMajorTickSpacing(1);
        sliderEndStep.setMaximum(32);
        sliderEndStep.setMinimum(1);
        sliderEndStep.setPaintLabels(true);
        sliderEndStep.setPaintTicks(true);
        sliderEndStep.setSnapToTicks(true);
        sliderEndStep.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sliderEndStep.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderEndStepStateChanged(evt);
            }
        });

        jLabel8.setText("End Step");

        javax.swing.GroupLayout arpeggioCommonPanelLayout = new javax.swing.GroupLayout(arpeggioCommonPanel);
        arpeggioCommonPanel.setLayout(arpeggioCommonPanelLayout);
        arpeggioCommonPanelLayout.setHorizontalGroup(
            arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arpeggioCommonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(arpeggioCommonPanelLayout.createSequentialGroup()
                        .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sliderVelocity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sliderAccentRate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sliderOctaveRange, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sliderEndStep, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(arpeggioCommonPanelLayout.createSequentialGroup()
                        .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(sliderGrid, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(sliderDuration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sliderMotif, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 407, Short.MAX_VALUE)
                        .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(arpeggioCommonPanelLayout.createSequentialGroup()
                        .addComponent(infoLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        arpeggioCommonPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {sliderAccentRate, sliderDuration, sliderEndStep, sliderGrid, sliderMotif, sliderOctaveRange, sliderVelocity});

        arpeggioCommonPanelLayout.setVerticalGroup(
            arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arpeggioCommonPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sliderGrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sliderDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sliderMotif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(arpeggioCommonPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, arpeggioCommonPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sliderOctaveRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(arpeggioCommonPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sliderAccentRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, arpeggioCommonPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sliderVelocity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(arpeggioCommonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sliderEndStep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(infoLabel)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Patch Arpeggio Common", arpeggioCommonPanel);

        patternPanel1.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("1", patternPanel1);

        patternPanel2.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("2", patternPanel2);

        patternPanel3.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("3", patternPanel3);

        patternPanel4.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("4", patternPanel4);

        patternPanel5.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("5", patternPanel5);

        patternPanel6.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("6", patternPanel6);

        patternPanel7.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("7", patternPanel7);

        patternPanel8.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("8", patternPanel8);

        patternPanel9.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("9", patternPanel9);

        patternPanel10.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("10", patternPanel10);

        patternPanel11.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("11", patternPanel11);

        patternPanel12.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("12", patternPanel12);

        patternPanel13.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("13", patternPanel13);

        patternPanel14.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("14", patternPanel14);

        patternPanel15.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("15", patternPanel15);

        patternPanel16.setMaximumSize(null);
        patternPanel16.setLayout(new java.awt.GridLayout(2, 16, 0, 32));
        arpeggioPatternTabbedPane.addTab("16", patternPanel16);

        javax.swing.GroupLayout arpeggioPatternPanelLayout = new javax.swing.GroupLayout(arpeggioPatternPanel);
        arpeggioPatternPanel.setLayout(arpeggioPatternPanelLayout);
        arpeggioPatternPanelLayout.setHorizontalGroup(
            arpeggioPatternPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arpeggioPatternPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(arpeggioPatternTabbedPane)
                .addContainerGap())
        );
        arpeggioPatternPanelLayout.setVerticalGroup(
            arpeggioPatternPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arpeggioPatternPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(arpeggioPatternTabbedPane)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Patch Arpeggio Pattern", arpeggioPatternPanel);

        outputDeviceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputDeviceComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Output device");

        javax.swing.GroupLayout devicePanelLayout = new javax.swing.GroupLayout(devicePanel);
        devicePanel.setLayout(devicePanelLayout);
        devicePanelLayout.setHorizontalGroup(
            devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(devicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(outputDeviceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap(498, Short.MAX_VALUE))
        );
        devicePanelLayout.setVerticalGroup(
            devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(devicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(devicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputDeviceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(524, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Device", devicePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(336, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sliderGridStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderGridStateChanged
        arp.setGrid(sliderGrid.getValue());
    }//GEN-LAST:event_sliderGridStateChanged

    private void outputDeviceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputDeviceComboBoxActionPerformed
        try {
            selectedDevice = MidiSystem.getMidiDevice(midiDeviceInfos[outputDeviceComboBox.getSelectedIndex()]);
            arp.setMidiDevice(selectedDevice);
        } catch (MidiUnavailableException ex) {
            logger.log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_outputDeviceComboBoxActionPerformed

    private void sliderDurationStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderDurationStateChanged
        arp.setDuration(sliderDuration.getValue());
    }//GEN-LAST:event_sliderDurationStateChanged

    private void sliderMotifStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderMotifStateChanged
        arp.setMotif(sliderMotif.getValue());
    }//GEN-LAST:event_sliderMotifStateChanged

    private void sliderOctaveRangeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderOctaveRangeStateChanged
        arp.setOctaveRange(sliderOctaveRange.getValue());
    }//GEN-LAST:event_sliderOctaveRangeStateChanged

    private void sliderAccentRateStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderAccentRateStateChanged
        arp.setAccentRate(sliderAccentRate.getValue());
    }//GEN-LAST:event_sliderAccentRateStateChanged

    private void sliderVelocityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderVelocityStateChanged
        arp.setVelocity(sliderVelocity.getValue());
        infoLabel.setText("Velocity: " + Integer.toString(sliderVelocity.getValue()));
    }//GEN-LAST:event_sliderVelocityStateChanged

    private void sliderEndStepStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderEndStepStateChanged
        arp.setEndStep(sliderEndStep.getValue());
        infoLabel.setText("End Step: " + Integer.toString(sliderEndStep.getValue()));
    }//GEN-LAST:event_sliderEndStepStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SH01ArpeggioEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SH01ArpeggioEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SH01ArpeggioEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SH01ArpeggioEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SH01ArpeggioEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel arpeggioCommonPanel;
    private javax.swing.JPanel arpeggioPatternPanel;
    private javax.swing.JTabbedPane arpeggioPatternTabbedPane;
    private javax.swing.JPanel devicePanel;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> outputDeviceComboBox;
    private javax.swing.JPanel patternPanel1;
    private javax.swing.JPanel patternPanel10;
    private javax.swing.JPanel patternPanel11;
    private javax.swing.JPanel patternPanel12;
    private javax.swing.JPanel patternPanel13;
    private javax.swing.JPanel patternPanel14;
    private javax.swing.JPanel patternPanel15;
    private javax.swing.JPanel patternPanel16;
    private javax.swing.JPanel patternPanel2;
    private javax.swing.JPanel patternPanel3;
    private javax.swing.JPanel patternPanel4;
    private javax.swing.JPanel patternPanel5;
    private javax.swing.JPanel patternPanel6;
    private javax.swing.JPanel patternPanel7;
    private javax.swing.JPanel patternPanel8;
    private javax.swing.JPanel patternPanel9;
    private javax.swing.JSlider sliderAccentRate;
    private javax.swing.JSlider sliderDuration;
    private javax.swing.JSlider sliderEndStep;
    private javax.swing.JSlider sliderGrid;
    private javax.swing.JSlider sliderMotif;
    private javax.swing.JSlider sliderOctaveRange;
    private javax.swing.JSlider sliderVelocity;
    // End of variables declaration//GEN-END:variables
}
